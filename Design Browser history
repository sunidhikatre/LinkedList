Initialize History: Set the browserâ€™s initial page with a Node containing the homepage URL as the current page.
Visit New Page: Create a new node for the URL and set it as the current page. Adjust back and next pointers to remove any forward history.
Back Operation: Move the current page backward up to the specified number of steps or until reaching the beginning of the history.
Forward Operation: Move the current page forward up to the specified number of steps or until reaching the most recent page.
Return URL: For both back and forward operations, return the current pageâ€™s URL after the movement.

class Node {
    String url;
    Node back;
    Node next;
    Node(String url) {
        this.url = url;
        this.back = null;
        this.next = null;
    }
}
class BrowserHistory {
    Node current;

    public BrowserHistory(String homepage) {
         current = new Node(homepage);
    }
    
    public void visit(String url) {
        Node visitPage = new Node(url);
        current.next = visitPage;
        visitPage.next = null;
        visitPage.back = current;
        current = visitPage;
    }
    
    public String back(int steps) {
        while(steps > 0) {
            if(current.back != null) {
                current = current.back;
            } else {
                break;
            }
            steps--;
        }
        return current.url;
    }
    
    public String forward(int steps) {
            while(steps > 0) {
            if(current.next != null) {
                current = current.next;
            } else {
                break;
            }
            steps--;
        }
        return current.url;
    }
}
